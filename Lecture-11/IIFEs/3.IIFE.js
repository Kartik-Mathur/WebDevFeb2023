((cl, a, s, sq) => {
    cl(a(10, 20));
    cl(a(10, 20));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(s(20, 10));
    cl(sq(16));
    cl(sq(25));
})(console.log,
    (a, b) =>{
        return a + b;
    },
    (a, b) =>{
        return a - b;
    },
    Math.sqrt
)

// ((cl, a, s, sq) => {cl(a(10, 20));cl(a(10, 20));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(s(20, 10));cl(sq(16));cl(sq(25));})(console.log,(a, b) =>{return a + b;},(a, b) =>{return a - b;},Math.sqrt)